# Application settings are now hardcoded in config.py

# API settings are now hardcoded in config.py

# External Services
GROBID_URL=http://localhost:8070

# Storage
PAPER_FOLDER=./paper
OUTPUT_FORMAT=json
STORE_LOCALLY=True
KEEP_INTERMEDIATE_FILES=False  # Changed to False to save memory

# Processing settings are now hardcoded in config.py
# Only extraction_timeout is actually used in the code

# OCR Configuration
USE_OCR=True  # Enable OCR functionality
OCR_SPACE_API_KEY=helloworld  # Free OCR.space API key (get your own at https://ocr.space/ocrapi)
OCR_LANGUAGE=eng  # e.g., eng, deu, fra; comma-separated for multi-language
OCR_TIMEOUT=30    # seconds
OCR_MAX_RETRIES=2 # transient error retries
OCR_PREPROCESS=True  # apply light grayscale/contrast/upscale before OCR

# Figure Detection Configuration
FIGURE_IOU_THRESHOLD=0.6
FIGURE_FILTER_TEXT_REGIONS=True
FIGURE_CANNY_LOW=30
FIGURE_CANNY_HIGH=100
FIGURE_USE_CLAHE=True

# GROBID Configuration
GROBID_TIMEOUT=180
GROBID_MAX_RETRIES=2

# Cloudinary Retry Configuration
CLOUDINARY_MAX_RETRIES=2
CLOUDINARY_RETRY_BACKOFF=1.0

# RabbitMQ Retry Configuration
RABBITMQ_MAX_RETRIES=3
RABBITMQ_RETRY_BACKOFF=1.0

# Cache is not implemented - using in-memory storage

# RabbitMQ
RABBITMQ_USER=
RABBITMQ_PASSWORD=


# PDF Storage (B2)
B2_KEY_ID=
B2_APPLICATION_KEY=
B2_BUCKET_NAME=
B2_BUCKET_ID=

# Gemini API not implemented

# Cloudinary Configuration
CLOUDINARY_URL=